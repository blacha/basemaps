name: Containers

on: [push]

jobs:
  build-containers:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux/amd64

          - os: ubuntu-24.04-arm
            platform: linux/arm64

    steps:
      - uses: linz/action-typescript@v3

      - name: (Prod) Ensure tag exists
        if: github.ref == 'refs/heads/master' && startsWith(github.event.head_commit.message, 'release:')
        run: |
          git fetch --depth=1 origin +refs/tags/*:refs/tags/* # see https://stackoverflow.com/a/60184319/9285308
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          CURRENT_VERSION=$(node -p "require('./lerna.json').version")
          git tag v${CURRENT_VERSION} -m v${CURRENT_VERSION} || true # Only create the tag if it doesn't exist

      # Package all the files
      - name: Bundle & Package all files
        run: |
          npx lerna run bundle --stream
          npm pack --workspaces
        env:
          NODE_ENV: 'production'

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Setup tags
        id: version
        run: |
          GIT_VERSION=$(git describe --tags --always --match 'v*')
          GIT_VERSION_MAJOR=$(echo $GIT_VERSION | cut -d. -f1)
          GIT_VERSION_MAJOR_MINOR=$(echo $GIT_VERSION | cut -d. -f1,2)

          echo "version=${GIT_VERSION}" >> $GITHUB_OUTPUT
          echo "version_major=${GIT_VERSION_MAJOR}" >> $GITHUB_OUTPUT
          echo "version_major_minor=${GIT_VERSION_MAJOR_MINOR}" >> $GITHUB_OUTPUT

      - name: Copy packages and files
        run: |
          # Files are packed into the base directory
          cp *.tgz packages/server/
          cp *.tgz packages/cli/
          cp -r packages/lambda-tiler/static/ packages/server/
          cp -r packages/lambda-tiler/static/ packages/cli/


      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3 # v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: '@basemaps/cli - Build and export to Docker'
        uses: docker/build-push-action@v6
        with:
          context: packages/cli
          load: true
          tags: |
            ghcr.io/${{ github.repository }}/cli:latest
            ghcr.io/${{ github.repository }}/cli:${{ steps.version.outputs.version }}

      - name: '@basemaps/cli - Test'
        run: |
          docker run --rm ghcr.io/${{ github.repository }}/cli:${{ steps.version.outputs.version }} --help

      - name: '@basemaps/cli - Build and push'
        uses: docker/build-push-action@v6
        with:
          context: packages/cli
          platforms: ${{ matrix.platform }}
          tags: |
            ghcr.io/${{ github.repository }}/cli:latest
            ghcr.io/${{ github.repository }}/cli:${{ steps.version.outputs.version }}
          push: ${{github.ref == 'refs/heads/master' && startsWith(github.event.head_commit.message, 'release:') == false}}

      - name: '@basemaps/cli - Build and push Major/Minor'
        uses: docker/build-push-action@v6
        with:
          context: packages/cli
          platforms: ${{ matrix.platform }}
          # Publish :v6 and :v6.38 tags when publishing a release
          tags: |
            ghcr.io/${{ github.repository }}/cli:latest
            ghcr.io/${{ github.repository }}/cli:${{ steps.version.outputs.version_major }}
            ghcr.io/${{ github.repository }}/cli:${{ steps.version.outputs.version_major_minor }}
            ghcr.io/${{ github.repository }}/cli:${{ steps.version.outputs.version }}
          push: ${{github.ref == 'refs/heads/master' && startsWith(github.event.head_commit.message, 'release:')}}

      - name: '@basemaps/server - Build and export to Docker'
        uses: docker/build-push-action@v6
        with:
          context: packages/server
          load: true
          tags: |
            ghcr.io/${{ github.repository }}/server:latest
            ghcr.io/${{ github.repository }}/server:${{ steps.version.outputs.version }}
  
      - name: '@basemaps/server - Test'
        run: |
          docker run --rm ghcr.io/${{ github.repository }}/server:${{ steps.version.outputs.version }} --version

      - name: '@basemaps/server - Build and push'
        uses: docker/build-push-action@v6
        with:
          context: packages/server
          platforms: ${{ matrix.platform }}
          tags: |
            ghcr.io/${{ github.repository }}/server:latest
            ghcr.io/${{ github.repository }}/server:${{ steps.version.outputs.version }}
          push: ${{github.ref == 'refs/heads/master' && startsWith(github.event.head_commit.message, 'release:') == false}}

      - name: '@basemaps/server - Build and push Major/Minor'
        uses: docker/build-push-action@v6
        with:
          context: packages/server
          platforms: ${{ matrix.platform }}
          # Publish :v6 and :v6.38 tags when publishing a release
          tags: |
            ghcr.io/${{ github.repository }}/server:latest
            ghcr.io/${{ github.repository }}/server:${{ steps.version.outputs.version_major }}
            ghcr.io/${{ github.repository }}/server:${{ steps.version.outputs.version_major_minor }}
            ghcr.io/${{ github.repository }}/server:${{ steps.version.outputs.version }}
          push: ${{github.ref == 'refs/heads/master' && startsWith(github.event.head_commit.message, 'release:')}}
          
