name: Pull Request Containers

on:
  pull_request:
    branches:
      - master
    types: [labeled, synchronize, opened]

jobs:
  containers:
    name: Create containers
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux/amd64

          - os: ubuntu-24.04-arm
            platform: linux/arm64

    if: |
      contains(github.event.pull_request.labels.*.name, 'container')

    permissions:
      id-token: write
      contents: read
      packages: write

    steps:
      - uses: linz/action-typescript@v3

      - name: Bundle & Package all files
        run: |
          npx lerna run bundle --stream
          npm pack --workspaces

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Copy packages and files
        run: |
          # Files are packed into the base directory
          cp *.tgz packages/server/
          cp *.tgz packages/cli/
          cp -r packages/lambda-tiler/static/ packages/server/
          cp -r packages/lambda-tiler/static/ packages/cli/

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: '@basemaps/cli - Build and push cli PR container'
        uses: docker/build-push-action@v6
        with:
          context: packages/cli
          platforms: ${{ matrix.platform }}
          tags: 'ghcr.io/${{ github.repository }}/cli:pr-${{ github.event.number }}'
          push: true

      - name: '@basemaps/server - Build and push server PR container'
        uses: docker/build-push-action@v6
        with:
          context: packages/server
          platforms: ${{ matrix.platform }}
          tags: ghcr.io/${{ github.repository }}/server:pr-${{ github.event.number }}
          push: true
